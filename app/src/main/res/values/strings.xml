<resources>
    <string name="app_name">Caketory</string>
    <string name="app_name_fa">کیکطوری</string>

    <string name="w_bestSelling">محصولات پرفروش</string>
    <string name="w_categories">انواع محصولات</string>
    <string name="w_addToShoppingBasket">افزودن به سبد خرید</string>


    <string name="drawer_open">open</string>
    <string name="drawer_close">close</string>

    <string name="nav_row_1">انواع محصولات</string>
    <string name="nav_row_2">موارد مورد علاقه</string>
    <string name="nav_row_3">کیک</string>
    <string name="nav_row_4">شیرینی خشک</string>
    <string name="nav_row_5">شیرینی تر</string>
    <string name="nav_row_6">دسر</string>

    <string name="action_settings">Settings</string>
    <string name="action_settings2">About Us</string>

    <string name="title_activity_product">ProductActivity</string>
    <string name="title_activity_main">MainActivity</string>


    <string name="text">
        To create a dynamic and multi-pane user interface on Android,
        you need to encapsulate UI components and activity behaviors into
        modules that you can swap into and out of your activities.
        You can create these modules with the Fragment class,
        which behaves somewhat like a nested activity that can
        define its own layout and manage its own lifecycle.
        When a fragment specifies its own layout, it can be configured
        in different combinations with other fragments inside an activity to
        modify your layout configuration for different screen sizes
        (a small screen might show one fragment at a time, but a large screen can show two or more).
        This class shows you how to create a dynamic user experience
        with different screen sizes, all while continuing to support devices
        running versions as old as Android 1.6.
        You can think of a fragment as a modular section of an activity,
        which has its own lifecycle, receives its own input events,
        and which you can add or remove while the activity is running
        (sort of like a "sub activity" that you can reuse in different activities).
        This lesson shows how to extend the Fragment class using the Support Library
        so your app remains compatible with devices running system versions as low as Android 1.6.
        Before you begin this lesson, you must set up your Android project to use the Support Library.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.
        You can create these modules with the Fragment class.

    </string>

    <string name="text2">
        To create a dynamic and multi-pane user interface on Android,
        you need to encapsulate UI components and activity behaviors into
        modules that you can swap into and out of your activities.
        You can create these modules with the Fragment class,
        which behaves somewhat like a nested activity that can
        define its own layout and manage its own lifecycle.
    </string>

    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>

</resources>
